BROKER SCHEMA com.util.esqls
PATH com.util.esql;

CREATE COMPUTE MODULE setCacheReq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE refJsonIn REFERENCE TO InputRoot.JSON.Data;	
		
		IF refJsonIn.chrKey 	= NULL OR TRIM(refJsonIn.chrKey) 	= '' OR NOT EXISTS(refJsonIn.chrKey[]) OR
		   refJsonIn.chrVal 	= NULL OR TRIM(refJsonIn.chrVal) 	= '' OR NOT EXISTS(refJsonIn.chrVal[]) OR
		   refJsonIn.mapCache 	= NULL OR TRIM(refJsonIn.mapCache) 	= '' OR NOT EXISTS(refJsonIn.mapCache[]) THEN
		   
		   SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 400;
		   RETURN TRUE;
		END IF;
			
		DECLARE chrVal CHARACTER '';
		SET chrVal = setCacheValue(refJsonIn.chrKey,	refJsonIn.chrVal, refJsonIn.mapCache);
		IF chrVal = '1' THEN
			SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 201;
		ELSE
			SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 500;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
